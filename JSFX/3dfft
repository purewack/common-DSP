desc:3D FFT

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
//consts
nfloor = -72;
n = 1024;

//pointers
dataBufP = 0;

//flags
dataBufHalf = 0;

//arrays
dataBuf = n*2;
dataWindow = dataBuf + n*2;
dataFFT = dataWindow + n*2;
dataGFX = dataFFT + n*2;

//window init
i=0;
loop(n*2,
  //dataWindow[i] = 1;
  dataWindow[i] = abs(sin(2*3.141592*i/(n*2))); //half sine window(s)
  dataWindow[i] *= dataWindow[i];
  i+=1;
);


//draw freq domain of fft data
function drawFT (to_draw x y w h ) (
 
  gfx_line(x,y+h,x+w,y+h);  
  gfx_line(x,y+h,x,y);   
  
  //gfx_x = x;
  //gfx_y = y+h; 
  i=0;
  wd=0;
  yd = 1;
  
  loop((n/2),
    vv = (1 - 10*log(to_draw[i])/nfloor);
    p_x = n_x;
    p_y = n_y;
    n_y = max(vv*h, 0);
    
    //n_x = i*w/n*2; //lin scale
    n_x = log(1+i)/log(n/2) * w; //log scale
    
    wdt = n_x-p_x;
    gfx_rect(x+n_x-wdt, y+h-n_y, max(1,wdt), n_y); 
    //gfx_roundrect(x+n_x-wdt, y+h-n_y, max(1,wdt), n_y, 1);
    //gfx_line(x+p_x,y+h-p_y ,x+n_x,y+h-n_y);
    
    i+=1;
  );
);



@sample
//colect data into circ buffer and signal empty half
dataBuf[dataBufP] = (spl0+spl1)*0.5; 
dataBufP >= n*2 ? dataBufP=0 : dataBufP+=1;
dataBufP == n ? dataBufHalf = 1;
dataBufP == 0 ? dataBufHalf = 2;



@gfx

//update on circ buffer update
dataBufHalf > 0 ? (  
  time_start = time_precise();
  
  o=0;
  dataBufHalf == 2 ? o=n;   
  dataBufHalf = 0;
  
  i=0;
  j=0;
  loop(n,
    //window data against spectral leakage
    dataFFT[i] = dataWindow[j] * dataBuf[j + o];
    dataFFT[i+1] = 0;
    i+=2;
    j+=1;
  );
  
  //time to freq domain
  fft(dataFFT, n);
  fft_permute(dataFFT, n);
  dataFFT[0] = 0;  
  dataFFT[1] = 0;
  
  //snapshot capture
  //[0][1][2][3] -> [ ][0][1][2]
 
  it = 64;
  oo = it;
  loop(it-1,
    pdst = (oo-1)*(n/2);
    psrc = (oo-2)*(n/2);
    memcpy(dataGFX+pdst, dataGFX+psrc, n/2);
    oo-=1;
  );

  
  
  i=0;
  j=0;
  loop(n/2,
    dataGFX[j] = sqrt(dataFFT[i]*dataFFT[i] + dataFFT[i+1]*dataFFT[i+1]);
    dataGFX[j] /= n*0.1;
    //dataGFX[j] = (1 - 10*log(dataGFX[j])/nfloor)*0.5;
    i+=2;
    j+=1;
  );
  

  
 
  gfx_set(0,0,1); 
  x = 800;
  w = gfx_w*0.7;
  h = gfx_h*0.7;
  y = -50;
  dx = 12;
  dy = -3;
  jj=it;
  rr = 1.0;
  loop(it,
    bufp = (n/2)*jj;
    rr -= 0.01;
    jj == 1 ? gfx_set(1,1,0,1.0): gfx_set(1.0,rr,rr,0.25);;
    drawFT(dataGFX+bufp, x, y, w, h);     
    x -= dx; y -= dy;     
    jj-=1;   
  );
   
  
  time_taken = time_precise() - time_start;
);

  

